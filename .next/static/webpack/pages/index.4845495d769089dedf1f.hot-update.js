webpackHotUpdate_N_E("pages/index",{

/***/ "./node_modules/css-loader/dist/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/index.js?!./styles/latestpost.module.css":
/*!*****************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ref--5-oneOf-2-1!./node_modules/next/dist/compiled/postcss-loader??__nextjs_postcss!./styles/latestpost.module.css ***!
  \*****************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
var ___CSS_LOADER_GET_URL_IMPORT___ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/getUrl.js */ "./node_modules/css-loader/dist/runtime/getUrl.js");
var ___CSS_LOADER_URL_IMPORT_0___ = __webpack_require__(/*! ../public/picture19.jpg */ "./public/picture19.jpg");
exports = ___CSS_LOADER_API_IMPORT___(true);
var ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);
// Module
exports.push([module.i, ".latestpost_IMG__3L81G {\r\n    background-image: url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ");\r\n}\r\n\r\n.latestpost_overlayImg__3HWTC {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background-color: #000000ab;\r\n    overflow: hidden;\r\n    z-index: 5;\r\n    width: 100%;\r\n    height: 100%;\r\n    -webkit-transform: scale(0);\r\n    transform: scale(0);\r\n    -webkit-transition: .8s ease;\r\n    transition: .8s ease;\r\n}\r\n\r\n.latestpost_iconContent__SXkYv {\r\n    fill: white;\r\n    font-size: 20px;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    -webkit-transform: translate(-50%, -50%);\r\n    transform: translate(-50%, -50%);\r\n    text-align: center;\r\n    -webkit-transition: .10s ease;\r\n    transition: .10s ease;\r\n}", "",{"version":3,"sources":["C:/Users/Romena Debnath/Desktop/myproject/styles/latestpost.module.css"],"names":[],"mappings":"AAAA;IACI,yDAAgD;AACpD;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,OAAO;IACP,QAAQ;IACR,2BAA2B;IAC3B,gBAAgB;IAChB,UAAU;IACV,WAAW;IACX,YAAY;IACZ,2BAA2B;IAE3B,mBAAmB;IACnB,4BAA4B;IAC5B,oBAAoB;AACxB;;AAEA;IACI,WAAW;IACX,eAAe;IACf,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,wCAAwC;IAExC,gCAAgC;IAChC,kBAAkB;IAClB,6BAAqB;IAArB,qBAAqB;AACzB","file":"latestpost.module.css","sourcesContent":[".IMG {\r\n    background-image: url(\"../public/picture19.jpg\");\r\n}\r\n\r\n.overlayImg {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background-color: #000000ab;\r\n    overflow: hidden;\r\n    z-index: 5;\r\n    width: 100%;\r\n    height: 100%;\r\n    -webkit-transform: scale(0);\r\n    -ms-transform: scale(0);\r\n    transform: scale(0);\r\n    -webkit-transition: .8s ease;\r\n    transition: .8s ease;\r\n}\r\n\r\n.iconContent {\r\n    fill: white;\r\n    font-size: 20px;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    -webkit-transform: translate(-50%, -50%);\r\n    -ms-transform: translate(-50%, -50%);\r\n    transform: translate(-50%, -50%);\r\n    text-align: center;\r\n    transition: .10s ease;\r\n}"]}]);
// Exports
exports.locals = {
	"IMG": "latestpost_IMG__3L81G",
	"overlayImg": "latestpost_overlayImg__3HWTC",
	"iconContent": "latestpost_iconContent__SXkYv"
};
module.exports = exports;


/***/ })

})
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3R5bGVzL2xhdGVzdHBvc3QubW9kdWxlLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBLGtDQUFrQyxtQkFBTyxDQUFDLHFHQUFnRDtBQUMxRixzQ0FBc0MsbUJBQU8sQ0FBQywyR0FBbUQ7QUFDakcsb0NBQW9DLG1CQUFPLENBQUMsdURBQXlCO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBLGNBQWMsUUFBUywyQkFBMkIsMEVBQTBFLEtBQUssdUNBQXVDLDJCQUEyQixrQkFBa0IsZ0JBQWdCLGlCQUFpQixvQ0FBb0MseUJBQXlCLG1CQUFtQixvQkFBb0IscUJBQXFCLG9DQUFvQyw0QkFBNEIscUNBQXFDLDZCQUE2QixLQUFLLHdDQUF3QyxvQkFBb0Isd0JBQXdCLDJCQUEyQixpQkFBaUIsa0JBQWtCLGlEQUFpRCx5Q0FBeUMsMkJBQTJCLHNDQUFzQyw4QkFBOEIsS0FBSyxPQUFPLDZIQUE2SCxZQUFZLE9BQU8sS0FBSyxZQUFZLFdBQVcsVUFBVSxVQUFVLFlBQVksYUFBYSxXQUFXLFVBQVUsVUFBVSxZQUFZLGFBQWEsYUFBYSxhQUFhLE9BQU8sS0FBSyxVQUFVLFVBQVUsWUFBWSxXQUFXLFVBQVUsWUFBWSxhQUFhLGFBQWEsYUFBYSxhQUFhLCtEQUErRCwyREFBMkQsS0FBSyxxQkFBcUIsMkJBQTJCLGtCQUFrQixnQkFBZ0IsaUJBQWlCLG9DQUFvQyx5QkFBeUIsbUJBQW1CLG9CQUFvQixxQkFBcUIsb0NBQW9DLGdDQUFnQyw0QkFBNEIscUNBQXFDLDZCQUE2QixLQUFLLHNCQUFzQixvQkFBb0Isd0JBQXdCLDJCQUEyQixpQkFBaUIsa0JBQWtCLGlEQUFpRCw2Q0FBNkMseUNBQXlDLDJCQUEyQiw4QkFBOEIsS0FBSyxHQUFHO0FBQ25rRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJzdGF0aWMvd2VicGFjay9wYWdlcy9pbmRleC40ODQ1NDk1ZDc2OTA4OWRlZGYxZi5ob3QtdXBkYXRlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyA9IHJlcXVpcmUoXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpO1xudmFyIF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qc1wiKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyA9IHJlcXVpcmUoXCIuLi9wdWJsaWMvcGljdHVyZTE5LmpwZ1wiKTtcbmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18odHJ1ZSk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18pO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIubGF0ZXN0cG9zdF9JTUdfXzNMODFHIHtcXHJcXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyArIFwiKTtcXHJcXG59XFxyXFxuXFxyXFxuLmxhdGVzdHBvc3Rfb3ZlcmxheUltZ19fM0hXVEMge1xcclxcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICAgIGJvdHRvbTogMDtcXHJcXG4gICAgbGVmdDogMDtcXHJcXG4gICAgcmlnaHQ6IDA7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDAwMDBhYjtcXHJcXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcXHJcXG4gICAgei1pbmRleDogNTtcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIGhlaWdodDogMTAwJTtcXHJcXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDApO1xcclxcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDApO1xcclxcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IC44cyBlYXNlO1xcclxcbiAgICB0cmFuc2l0aW9uOiAuOHMgZWFzZTtcXHJcXG59XFxyXFxuXFxyXFxuLmxhdGVzdHBvc3RfaWNvbkNvbnRlbnRfX1NYa1l2IHtcXHJcXG4gICAgZmlsbDogd2hpdGU7XFxyXFxuICAgIGZvbnQtc2l6ZTogMjBweDtcXHJcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgICB0b3A6IDUwJTtcXHJcXG4gICAgbGVmdDogNTAlO1xcclxcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xcclxcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IC4xMHMgZWFzZTtcXHJcXG4gICAgdHJhbnNpdGlvbjogLjEwcyBlYXNlO1xcclxcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJDOi9Vc2Vycy9Sb21lbmEgRGVibmF0aC9EZXNrdG9wL215cHJvamVjdC9zdHlsZXMvbGF0ZXN0cG9zdC5tb2R1bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0kseURBQWdEO0FBQ3BEOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFNBQVM7SUFDVCxPQUFPO0lBQ1AsUUFBUTtJQUNSLDJCQUEyQjtJQUMzQixnQkFBZ0I7SUFDaEIsVUFBVTtJQUNWLFdBQVc7SUFDWCxZQUFZO0lBQ1osMkJBQTJCO0lBRTNCLG1CQUFtQjtJQUNuQiw0QkFBNEI7SUFDNUIsb0JBQW9CO0FBQ3hCOztBQUVBO0lBQ0ksV0FBVztJQUNYLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLFNBQVM7SUFDVCx3Q0FBd0M7SUFFeEMsZ0NBQWdDO0lBQ2hDLGtCQUFrQjtJQUNsQiw2QkFBcUI7SUFBckIscUJBQXFCO0FBQ3pCXCIsXCJmaWxlXCI6XCJsYXRlc3Rwb3N0Lm1vZHVsZS5jc3NcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLklNRyB7XFxyXFxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcXFwiLi4vcHVibGljL3BpY3R1cmUxOS5qcGdcXFwiKTtcXHJcXG59XFxyXFxuXFxyXFxuLm92ZXJsYXlJbWcge1xcclxcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICAgIGJvdHRvbTogMDtcXHJcXG4gICAgbGVmdDogMDtcXHJcXG4gICAgcmlnaHQ6IDA7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDAwMDBhYjtcXHJcXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcXHJcXG4gICAgei1pbmRleDogNTtcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIGhlaWdodDogMTAwJTtcXHJcXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDApO1xcclxcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgwKTtcXHJcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwKTtcXHJcXG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiAuOHMgZWFzZTtcXHJcXG4gICAgdHJhbnNpdGlvbjogLjhzIGVhc2U7XFxyXFxufVxcclxcblxcclxcbi5pY29uQ29udGVudCB7XFxyXFxuICAgIGZpbGw6IHdoaXRlO1xcclxcbiAgICBmb250LXNpemU6IDIwcHg7XFxyXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgdG9wOiA1MCU7XFxyXFxuICAgIGxlZnQ6IDUwJTtcXHJcXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcXHJcXG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xcclxcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICB0cmFuc2l0aW9uOiAuMTBzIGVhc2U7XFxyXFxufVwiXX1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcIklNR1wiOiBcImxhdGVzdHBvc3RfSU1HX18zTDgxR1wiLFxuXHRcIm92ZXJsYXlJbWdcIjogXCJsYXRlc3Rwb3N0X292ZXJsYXlJbWdfXzNIV1RDXCIsXG5cdFwiaWNvbkNvbnRlbnRcIjogXCJsYXRlc3Rwb3N0X2ljb25Db250ZW50X19TWGtZdlwiXG59O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==
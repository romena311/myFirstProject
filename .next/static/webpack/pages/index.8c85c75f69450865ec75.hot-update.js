webpackHotUpdate_N_E("pages/index",{

/***/ "./node_modules/css-loader/dist/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/index.js?!./styles/latestpost.module.css":
/*!*****************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ref--5-oneOf-2-1!./node_modules/next/dist/compiled/postcss-loader??__nextjs_postcss!./styles/latestpost.module.css ***!
  \*****************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
exports = ___CSS_LOADER_API_IMPORT___(true);
// Module
exports.push([module.i, ".latestpost_content__1BwcF {\r\n    display: block;\r\n    clear: both;\r\n    content: \" \";\r\n    width: 100%;\r\n}\r\n\r\n.latestpost_imgThumbnailContent__22gor {\r\n    display: -webkit-flex;\r\n    display: -moz-box;\r\n    display: flex;\r\n    -webkit-flex-direction: row;\r\n       -moz-box-orient: horizontal;\r\n       -moz-box-direction: normal;\r\n            flex-direction: row;\r\n    min-height: auto;\r\n    margin-bottom: 0;\r\n}\r\n\r\n.latestpost_imgThumbnail2__1cWE5 {\r\n    padding: 0;\r\n    float: left;\r\n    width: 200px;\r\n    height: 120px;\r\n    -webkit-flex-grow: 0;\r\n       -moz-box-flex: 0;\r\n            flex-grow: 0;\r\n    -webkit-flex-shrink: 0;\r\n            flex-shrink: 0;\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n\r\n.latestpost_img-bg__c0lWC {\r\n    \r\n    position: absolute;\r\n    left: -1px;\r\n    top: -1px;\r\n    bottom: -1px;\r\n    right: -1px;\r\n    z-index: 0;\r\n    background-size: cover;\r\n    background-position: 50% 50%;\r\n    -webkit-transition: 500ms ease all;\r\n    transition: 500ms ease all;\r\n    overflow: hidden;\r\n}", "",{"version":3,"sources":["C:/Users/Romena Debnath/Desktop/myproject/styles/latestpost.module.css"],"names":[],"mappings":"AAAA;IACI,cAAc;IACd,WAAW;IACX,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,qBAAa;IAAb,iBAAa;IAAb,aAAa;IACb,2BAAmB;OAAnB,2BAAmB;OAAnB,0BAAmB;YAAnB,mBAAmB;IACnB,gBAAgB;IAChB,gBAAgB;AACpB;;AAEA;IACI,UAAU;IACV,WAAW;IACX,YAAY;IACZ,aAAa;IACb,oBAAY;OAAZ,gBAAY;YAAZ,YAAY;IACZ,sBAAc;YAAd,cAAc;IACd,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;;IAEI,kBAAkB;IAClB,UAAU;IACV,SAAS;IACT,YAAY;IACZ,WAAW;IACX,UAAU;IACV,sBAAsB;IACtB,4BAA4B;IAC5B,kCAA0B;IAA1B,0BAA0B;IAC1B,gBAAgB;AACpB","file":"latestpost.module.css","sourcesContent":[".content {\r\n    display: block;\r\n    clear: both;\r\n    content: \" \";\r\n    width: 100%;\r\n}\r\n\r\n.imgThumbnailContent {\r\n    display: flex;\r\n    flex-direction: row;\r\n    min-height: auto;\r\n    margin-bottom: 0;\r\n}\r\n\r\n.imgThumbnail2 {\r\n    padding: 0;\r\n    float: left;\r\n    width: 200px;\r\n    height: 120px;\r\n    flex-grow: 0;\r\n    flex-shrink: 0;\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n\r\n.img-bg {\r\n    \r\n    position: absolute;\r\n    left: -1px;\r\n    top: -1px;\r\n    bottom: -1px;\r\n    right: -1px;\r\n    z-index: 0;\r\n    background-size: cover;\r\n    background-position: 50% 50%;\r\n    transition: 500ms ease all;\r\n    overflow: hidden;\r\n}"]}]);
// Exports
exports.locals = {
	"content": "latestpost_content__1BwcF",
	"imgThumbnailContent": "latestpost_imgThumbnailContent__22gor",
	"imgThumbnail2": "latestpost_imgThumbnail2__1cWE5",
	"img-bg": "latestpost_img-bg__c0lWC"
};
module.exports = exports;


/***/ })

})
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3R5bGVzL2xhdGVzdHBvc3QubW9kdWxlLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBLGtDQUFrQyxtQkFBTyxDQUFDLHFHQUFnRDtBQUMxRjtBQUNBO0FBQ0EsY0FBYyxRQUFTLCtCQUErQix1QkFBdUIsb0JBQW9CLHVCQUF1QixvQkFBb0IsS0FBSyxnREFBZ0QsOEJBQThCLDBCQUEwQixzQkFBc0Isb0NBQW9DLHVDQUF1QyxzQ0FBc0Msb0NBQW9DLHlCQUF5Qix5QkFBeUIsS0FBSywwQ0FBMEMsbUJBQW1CLG9CQUFvQixxQkFBcUIsc0JBQXNCLDZCQUE2Qiw0QkFBNEIsNkJBQTZCLCtCQUErQiwrQkFBK0IsMkJBQTJCLHlCQUF5QixLQUFLLG1DQUFtQyxtQ0FBbUMsbUJBQW1CLGtCQUFrQixxQkFBcUIsb0JBQW9CLG1CQUFtQiwrQkFBK0IscUNBQXFDLDJDQUEyQyxtQ0FBbUMseUJBQXlCLEtBQUssT0FBTyw2SEFBNkgsVUFBVSxVQUFVLFVBQVUsVUFBVSxNQUFNLEtBQUssV0FBVyxXQUFXLFVBQVUsWUFBWSxhQUFhLGFBQWEsYUFBYSxhQUFhLGFBQWEsT0FBTyxLQUFLLFVBQVUsVUFBVSxVQUFVLFVBQVUsV0FBVyxXQUFXLFVBQVUsV0FBVyxVQUFVLFlBQVksYUFBYSxPQUFPLE1BQU0sWUFBWSxXQUFXLFVBQVUsVUFBVSxVQUFVLFVBQVUsWUFBWSxhQUFhLGFBQWEsYUFBYSxhQUFhLG1FQUFtRSx1QkFBdUIsb0JBQW9CLHVCQUF1QixvQkFBb0IsS0FBSyw4QkFBOEIsc0JBQXNCLDRCQUE0Qix5QkFBeUIseUJBQXlCLEtBQUssd0JBQXdCLG1CQUFtQixvQkFBb0IscUJBQXFCLHNCQUFzQixxQkFBcUIsdUJBQXVCLDJCQUEyQix5QkFBeUIsS0FBSyxpQkFBaUIsbUNBQW1DLG1CQUFtQixrQkFBa0IscUJBQXFCLG9CQUFvQixtQkFBbUIsK0JBQStCLHFDQUFxQyxtQ0FBbUMseUJBQXlCLEtBQUssR0FBRztBQUM5N0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJzdGF0aWMvd2VicGFjay9wYWdlcy9pbmRleC44Yzg1Yzc1ZjY5NDUwODY1ZWM3NS5ob3QtdXBkYXRlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyA9IHJlcXVpcmUoXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpO1xuZXhwb3J0cyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyh0cnVlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmxhdGVzdHBvc3RfY29udGVudF9fMUJ3Y0Yge1xcclxcbiAgICBkaXNwbGF5OiBibG9jaztcXHJcXG4gICAgY2xlYXI6IGJvdGg7XFxyXFxuICAgIGNvbnRlbnQ6IFxcXCIgXFxcIjtcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxufVxcclxcblxcclxcbi5sYXRlc3Rwb3N0X2ltZ1RodW1ibmFpbENvbnRlbnRfXzIyZ29yIHtcXHJcXG4gICAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xcclxcbiAgICBkaXNwbGF5OiAtbW96LWJveDtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgLXdlYmtpdC1mbGV4LWRpcmVjdGlvbjogcm93O1xcclxcbiAgICAgICAtbW96LWJveC1vcmllbnQ6IGhvcml6b250YWw7XFxyXFxuICAgICAgIC1tb3otYm94LWRpcmVjdGlvbjogbm9ybWFsO1xcclxcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxyXFxuICAgIG1pbi1oZWlnaHQ6IGF1dG87XFxyXFxuICAgIG1hcmdpbi1ib3R0b206IDA7XFxyXFxufVxcclxcblxcclxcbi5sYXRlc3Rwb3N0X2ltZ1RodW1ibmFpbDJfXzFjV0U1IHtcXHJcXG4gICAgcGFkZGluZzogMDtcXHJcXG4gICAgZmxvYXQ6IGxlZnQ7XFxyXFxuICAgIHdpZHRoOiAyMDBweDtcXHJcXG4gICAgaGVpZ2h0OiAxMjBweDtcXHJcXG4gICAgLXdlYmtpdC1mbGV4LWdyb3c6IDA7XFxyXFxuICAgICAgIC1tb3otYm94LWZsZXg6IDA7XFxyXFxuICAgICAgICAgICAgZmxleC1ncm93OiAwO1xcclxcbiAgICAtd2Via2l0LWZsZXgtc2hyaW5rOiAwO1xcclxcbiAgICAgICAgICAgIGZsZXgtc2hyaW5rOiAwO1xcclxcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICAgIG92ZXJmbG93OiBoaWRkZW47XFxyXFxufVxcclxcblxcclxcbi5sYXRlc3Rwb3N0X2ltZy1iZ19fYzBsV0Mge1xcclxcbiAgICBcXHJcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgICBsZWZ0OiAtMXB4O1xcclxcbiAgICB0b3A6IC0xcHg7XFxyXFxuICAgIGJvdHRvbTogLTFweDtcXHJcXG4gICAgcmlnaHQ6IC0xcHg7XFxyXFxuICAgIHotaW5kZXg6IDA7XFxyXFxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XFxyXFxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XFxyXFxuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogNTAwbXMgZWFzZSBhbGw7XFxyXFxuICAgIHRyYW5zaXRpb246IDUwMG1zIGVhc2UgYWxsO1xcclxcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xcclxcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJDOi9Vc2Vycy9Sb21lbmEgRGVibmF0aC9EZXNrdG9wL215cHJvamVjdC9zdHlsZXMvbGF0ZXN0cG9zdC5tb2R1bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksY0FBYztJQUNkLFdBQVc7SUFDWCxZQUFZO0lBQ1osV0FBVztBQUNmOztBQUVBO0lBQ0kscUJBQWE7SUFBYixpQkFBYTtJQUFiLGFBQWE7SUFDYiwyQkFBbUI7T0FBbkIsMkJBQW1CO09BQW5CLDBCQUFtQjtZQUFuQixtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLFVBQVU7SUFDVixXQUFXO0lBQ1gsWUFBWTtJQUNaLGFBQWE7SUFDYixvQkFBWTtPQUFaLGdCQUFZO1lBQVosWUFBWTtJQUNaLHNCQUFjO1lBQWQsY0FBYztJQUNkLGtCQUFrQjtJQUNsQixnQkFBZ0I7QUFDcEI7O0FBRUE7O0lBRUksa0JBQWtCO0lBQ2xCLFVBQVU7SUFDVixTQUFTO0lBQ1QsWUFBWTtJQUNaLFdBQVc7SUFDWCxVQUFVO0lBQ1Ysc0JBQXNCO0lBQ3RCLDRCQUE0QjtJQUM1QixrQ0FBMEI7SUFBMUIsMEJBQTBCO0lBQzFCLGdCQUFnQjtBQUNwQlwiLFwiZmlsZVwiOlwibGF0ZXN0cG9zdC5tb2R1bGUuY3NzXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5jb250ZW50IHtcXHJcXG4gICAgZGlzcGxheTogYmxvY2s7XFxyXFxuICAgIGNsZWFyOiBib3RoO1xcclxcbiAgICBjb250ZW50OiBcXFwiIFxcXCI7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbn1cXHJcXG5cXHJcXG4uaW1nVGh1bWJuYWlsQ29udGVudCB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxyXFxuICAgIG1pbi1oZWlnaHQ6IGF1dG87XFxyXFxuICAgIG1hcmdpbi1ib3R0b206IDA7XFxyXFxufVxcclxcblxcclxcbi5pbWdUaHVtYm5haWwyIHtcXHJcXG4gICAgcGFkZGluZzogMDtcXHJcXG4gICAgZmxvYXQ6IGxlZnQ7XFxyXFxuICAgIHdpZHRoOiAyMDBweDtcXHJcXG4gICAgaGVpZ2h0OiAxMjBweDtcXHJcXG4gICAgZmxleC1ncm93OiAwO1xcclxcbiAgICBmbGV4LXNocmluazogMDtcXHJcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcclxcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xcclxcbn1cXHJcXG5cXHJcXG4uaW1nLWJnIHtcXHJcXG4gICAgXFxyXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgbGVmdDogLTFweDtcXHJcXG4gICAgdG9wOiAtMXB4O1xcclxcbiAgICBib3R0b206IC0xcHg7XFxyXFxuICAgIHJpZ2h0OiAtMXB4O1xcclxcbiAgICB6LWluZGV4OiAwO1xcclxcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xcclxcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xcclxcbiAgICB0cmFuc2l0aW9uOiA1MDBtcyBlYXNlIGFsbDtcXHJcXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcXHJcXG59XCJdfV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0cy5sb2NhbHMgPSB7XG5cdFwiY29udGVudFwiOiBcImxhdGVzdHBvc3RfY29udGVudF9fMUJ3Y0ZcIixcblx0XCJpbWdUaHVtYm5haWxDb250ZW50XCI6IFwibGF0ZXN0cG9zdF9pbWdUaHVtYm5haWxDb250ZW50X18yMmdvclwiLFxuXHRcImltZ1RodW1ibmFpbDJcIjogXCJsYXRlc3Rwb3N0X2ltZ1RodW1ibmFpbDJfXzFjV0U1XCIsXG5cdFwiaW1nLWJnXCI6IFwibGF0ZXN0cG9zdF9pbWctYmdfX2MwbFdDXCJcbn07XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHM7XG4iXSwic291cmNlUm9vdCI6IiJ9